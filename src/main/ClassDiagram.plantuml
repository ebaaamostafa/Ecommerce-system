@startuml
skinparam classAttributeIconSize 0

interface Shippable {
    +String getName()
    +double getWeight()
}

interface Expirable {
    +boolean isExpired()
}

abstract class Product {
    -String name
    -double price
    -int quantity

    +getName(): String
    +getPrice(): double
    +getQuantity(): int
    +isExpired(): boolean
    +isShippable(): boolean
}

class Cheese extends Product implements Expirable, Shippable {
    -double weight
    -boolean expirable
    }



class TV extends Product implements Shippable {
    -double weight
}

class ScratchCard extends Product {

}
class Biscuits extends Product implements Expirable, Shippable {
    -double weight
    -boolean expirable
    }

class CartItem {
    -Product product
    -int quantity
}

class Cart {
    -List<CartItem> items

    +add(Product, int)
    +getSubtotal(): double
    +getShippingCost(): double
    +getTotal(): double
    +getShippableItems(): List<Shippable>
    +isEmpty(): boolean
}

class Customer {
    -String name
    -double balance

    +canAfford(double): boolean
    +deduct(double)
    +getBalance(): double
}

class CheckoutService {
    +checkout(Customer, Cart)
}

class ShippingService {
    +ship(List<Shippable>)
}


Product <|-- Cheese
Product <|-- Biscuits
Product <|-- TV
Product <|-- ScratchCard

Product ..|> Shippable : <<optional>>
Product ..|> Expirable : <<optional>>

Cart --> CartItem
CartItem --> Product

CheckoutService --> Customer
CheckoutService --> Cart
CheckoutService --> ShippingService

ShippingService --> Shippable

@enduml
